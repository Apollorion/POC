terraform {
  required_providers {
    spacelift = {
      source  = "spacelift-io/spacelift"
      version = "~> 1.0"
    }
  }
}

# Configure the Spacelift Provider
# Uses spacectl authentication automatically
provider "spacelift" {
  # The provider will automatically use spacectl's stored credentials
  # No additional configuration needed when using spacectl
}

# Data source to get the current Spacelift account
data "spacelift_current_account" "this" {}

# Create a worker pool for the POC
resource "spacelift_worker_pool" "poc_pool" {
  name        = "poc-local-k8s-pool"
  description = "Local Kubernetes worker pool for POC testing"
  
  # Read the CSR from the file generated by our script
  csr = file("../certs/spacelift.csr")
  
  # Optional: Associate with a specific space
  # space_id = spacelift_space.poc_space.id
  
  labels = [
    "environment:poc",
    "type:local",
    "platform:kubernetes"
  ]
}

# Optional: Create a dedicated space for POC resources
resource "spacelift_space" "poc_space" {
  name                = "POC Environment"
  description         = "Space for POC testing and demonstrations"
  inherit_entities    = false
  parent_space_id     = "root"
  
  labels = [
    "environment:poc",
    "purpose:testing"
  ]
}

# Create a context for LocalStack AWS credentials
resource "spacelift_context" "localstack_aws" {
  name        = "localstack-aws-credentials"
  description = "AWS credentials for LocalStack testing"
  space_id    = spacelift_space.poc_space.id
  
  labels = [
    "provider:aws",
    "environment:local"
  ]
}

# Add LocalStack AWS credentials to the context
resource "spacelift_environment_variable" "aws_access_key" {
  context_id = spacelift_context.localstack_aws.id
  name       = "AWS_ACCESS_KEY_ID"
  value      = "test"
  write_only = false
}

resource "spacelift_environment_variable" "aws_secret_key" {
  context_id = spacelift_context.localstack_aws.id
  name       = "AWS_SECRET_ACCESS_KEY"
  value      = "test"
  write_only = true
}

resource "spacelift_environment_variable" "aws_region" {
  context_id = spacelift_context.localstack_aws.id
  name       = "AWS_DEFAULT_REGION"
  value      = "us-east-1"
  write_only = false
}

resource "spacelift_environment_variable" "aws_endpoint" {
  context_id = spacelift_context.localstack_aws.id
  name       = "AWS_ENDPOINT_URL"
  value      = "http://host.docker.internal:4566"
  write_only = false
}

# Output the worker pool configuration file content
output "worker_pool_config" {
  description = "Worker pool configuration file content"
  value       = spacelift_worker_pool.poc_pool.config
  sensitive   = true
}

output "worker_pool_id" {
  description = "The ID of the created worker pool"
  value       = spacelift_worker_pool.poc_pool.id
}

output "space_id" {
  description = "The ID of the POC space"
  value       = spacelift_space.poc_space.id
}

output "context_id" {
  description = "The ID of the LocalStack context"
  value       = spacelift_context.localstack_aws.id
}